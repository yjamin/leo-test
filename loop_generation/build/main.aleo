program loop_generation.aleo;

function get_message_id:
    input r0 as [u8; 256u32].private;
    input r1 as u32.private;
    gte r1 77u32 into r2;
    assert.eq r2 true;
    cast 0u128 0u128 into r3 as [u128; 2u32];
    is.eq r1 77u32 into r4;
    cast 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 into r5 as [u8; 77u32];
    cast r0[0u32] r0[1u32] r0[2u32] r0[3u32] r0[4u32] r0[5u32] r0[6u32] r0[7u32] r0[8u32] r0[9u32] r0[10u32] r0[11u32] r0[12u32] r0[13u32] r0[14u32] r0[15u32] r0[16u32] r0[17u32] r0[18u32] r0[19u32] r0[20u32] r0[21u32] r0[22u32] r0[23u32] r0[24u32] r0[25u32] r0[26u32] r0[27u32] r0[28u32] r0[29u32] r0[30u32] r0[31u32] r0[32u32] r0[33u32] r0[34u32] r0[35u32] r0[36u32] r0[37u32] r0[38u32] r0[39u32] r0[40u32] r0[41u32] r0[42u32] r0[43u32] r0[44u32] r0[45u32] r0[46u32] r0[47u32] r0[48u32] r0[49u32] r0[50u32] r0[51u32] r0[52u32] r0[53u32] r0[54u32] r0[55u32] r0[56u32] r0[57u32] r0[58u32] r0[59u32] r0[60u32] r0[61u32] r0[62u32] r0[63u32] r0[64u32] r0[65u32] r0[66u32] r0[67u32] r0[68u32] r0[69u32] r0[70u32] r0[71u32] r0[72u32] r0[73u32] r0[74u32] r0[75u32] r0[76u32] r5[77u32] r5[78u32] r5[79u32] r5[80u32] r5[81u32] r5[82u32] r5[83u32] r5[84u32] r5[85u32] r5[86u32] r5[87u32] r5[88u32] r5[89u32] r5[90u32] r5[91u32] r5[92u32] r5[93u32] r5[94u32] r5[95u32] r5[96u32] r5[97u32] r5[98u32] r5[99u32] r5[100u32] r5[101u32] r5[102u32] r5[103u32] r5[104u32] r5[105u32] r5[106u32] r5[107u32] r5[108u32] r5[109u32] r5[110u32] r5[111u32] r5[112u32] r5[113u32] r5[114u32] r5[115u32] r5[116u32] r5[117u32] r5[118u32] r5[119u32] r5[120u32] r5[121u32] r5[122u32] r5[123u32] r5[124u32] r5[125u32] r5[126u32] r5[127u32] r5[128u32] r5[129u32] r5[130u32] r5[131u32] r5[132u32] r5[133u32] r5[134u32] r5[135u32] r5[136u32] r5[137u32] r5[138u32] r5[139u32] r5[140u32] r5[141u32] r5[142u32] r5[143u32] r5[144u32] r5[145u32] r5[146u32] r5[147u32] r5[148u32] r5[149u32] r5[150u32] r5[151u32] r5[152u32] r5[153u32] r5[154u32] r5[155u32] r5[156u32] r5[157u32] r5[158u32] r5[159u32] r5[160u32] r5[161u32] r5[162u32] r5[163u32] r5[164u32] r5[165u32] r5[166u32] r5[167u32] r5[168u32] r5[169u32] r5[170u32] r5[171u32] r5[172u32] r5[173u32] r5[174u32] r5[175u32] r5[176u32] r5[177u32] r5[178u32] r5[179u32] r5[180u32] r5[181u32] r5[182u32] r5[183u32] r5[184u32] r5[185u32] r5[186u32] r5[187u32] r5[188u32] into r6 as [u8; 189u32];
    hash.keccak256.native.raw r6 into r7 as [boolean; 256u32];
    deserialize.bits.raw r7 ([boolean; 256u32]) into r8 ([u128; 2u32]);    ternary r4 r8[0u32] r3[0u32] into r9;
    ternary r4 r8[1u32] r3[1u32] into r10;
    cast r9 r10 into r11 as [u128; 2u32];
    is.eq r1 93u32 into r12;
    cast 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 into r13 as [u8; 93u32];
    cast r0[0u32] r0[1u32] r0[2u32] r0[3u32] r0[4u32] r0[5u32] r0[6u32] r0[7u32] r0[8u32] r0[9u32] r0[10u32] r0[11u32] r0[12u32] r0[13u32] r0[14u32] r0[15u32] r0[16u32] r0[17u32] r0[18u32] r0[19u32] r0[20u32] r0[21u32] r0[22u32] r0[23u32] r0[24u32] r0[25u32] r0[26u32] r0[27u32] r0[28u32] r0[29u32] r0[30u32] r0[31u32] r0[32u32] r0[33u32] r0[34u32] r0[35u32] r0[36u32] r0[37u32] r0[38u32] r0[39u32] r0[40u32] r0[41u32] r0[42u32] r0[43u32] r0[44u32] r0[45u32] r0[46u32] r0[47u32] r0[48u32] r0[49u32] r0[50u32] r0[51u32] r0[52u32] r0[53u32] r0[54u32] r0[55u32] r0[56u32] r0[57u32] r0[58u32] r0[59u32] r0[60u32] r0[61u32] r0[62u32] r0[63u32] r0[64u32] r0[65u32] r0[66u32] r0[67u32] r0[68u32] r0[69u32] r0[70u32] r0[71u32] r0[72u32] r0[73u32] r0[74u32] r0[75u32] r0[76u32] r0[77u32] r0[78u32] r0[79u32] r0[80u32] r0[81u32] r0[82u32] r0[83u32] r0[84u32] r0[85u32] r0[86u32] r0[87u32] r0[88u32] r0[89u32] r0[90u32] r0[91u32] r0[92u32] r13[93u32] r13[94u32] r13[95u32] r13[96u32] r13[97u32] r13[98u32] r13[99u32] r13[100u32] r13[101u32] r13[102u32] r13[103u32] r13[104u32] r13[105u32] r13[106u32] r13[107u32] r13[108u32] r13[109u32] r13[110u32] r13[111u32] r13[112u32] r13[113u32] r13[114u32] r13[115u32] r13[116u32] r13[117u32] r13[118u32] r13[119u32] r13[120u32] r13[121u32] r13[122u32] r13[123u32] r13[124u32] r13[125u32] r13[126u32] r13[127u32] r13[128u32] r13[129u32] r13[130u32] r13[131u32] r13[132u32] r13[133u32] r13[134u32] r13[135u32] r13[136u32] r13[137u32] r13[138u32] r13[139u32] r13[140u32] r13[141u32] r13[142u32] r13[143u32] r13[144u32] r13[145u32] r13[146u32] r13[147u32] r13[148u32] r13[149u32] r13[150u32] r13[151u32] r13[152u32] r13[153u32] r13[154u32] r13[155u32] r13[156u32] r13[157u32] r13[158u32] r13[159u32] r13[160u32] r13[161u32] r13[162u32] r13[163u32] r13[164u32] r13[165u32] r13[166u32] r13[167u32] r13[168u32] r13[169u32] r13[170u32] r13[171u32] r13[172u32] r13[173u32] r13[174u32] r13[175u32] r13[176u32] r13[177u32] r13[178u32] r13[179u32] r13[180u32] r13[181u32] r13[182u32] r13[183u32] r13[184u32] r13[185u32] r13[186u32] r13[187u32] r13[188u32] into r14 as [u8; 189u32];
    hash.keccak256.native.raw r14 into r15 as [boolean; 256u32];
    deserialize.bits.raw r15 ([boolean; 256u32]) into r16 ([u128; 2u32]);    ternary r12 r16[0u32] r11[0u32] into r17;
    ternary r12 r16[1u32] r11[1u32] into r18;
    cast r17 r18 into r19 as [u128; 2u32];
    is.eq r1 109u32 into r20;
    cast 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 into r21 as [u8; 109u32];
    cast r0[0u32] r0[1u32] r0[2u32] r0[3u32] r0[4u32] r0[5u32] r0[6u32] r0[7u32] r0[8u32] r0[9u32] r0[10u32] r0[11u32] r0[12u32] r0[13u32] r0[14u32] r0[15u32] r0[16u32] r0[17u32] r0[18u32] r0[19u32] r0[20u32] r0[21u32] r0[22u32] r0[23u32] r0[24u32] r0[25u32] r0[26u32] r0[27u32] r0[28u32] r0[29u32] r0[30u32] r0[31u32] r0[32u32] r0[33u32] r0[34u32] r0[35u32] r0[36u32] r0[37u32] r0[38u32] r0[39u32] r0[40u32] r0[41u32] r0[42u32] r0[43u32] r0[44u32] r0[45u32] r0[46u32] r0[47u32] r0[48u32] r0[49u32] r0[50u32] r0[51u32] r0[52u32] r0[53u32] r0[54u32] r0[55u32] r0[56u32] r0[57u32] r0[58u32] r0[59u32] r0[60u32] r0[61u32] r0[62u32] r0[63u32] r0[64u32] r0[65u32] r0[66u32] r0[67u32] r0[68u32] r0[69u32] r0[70u32] r0[71u32] r0[72u32] r0[73u32] r0[74u32] r0[75u32] r0[76u32] r0[77u32] r0[78u32] r0[79u32] r0[80u32] r0[81u32] r0[82u32] r0[83u32] r0[84u32] r0[85u32] r0[86u32] r0[87u32] r0[88u32] r0[89u32] r0[90u32] r0[91u32] r0[92u32] r0[93u32] r0[94u32] r0[95u32] r0[96u32] r0[97u32] r0[98u32] r0[99u32] r0[100u32] r0[101u32] r0[102u32] r0[103u32] r0[104u32] r0[105u32] r0[106u32] r0[107u32] r0[108u32] r21[109u32] r21[110u32] r21[111u32] r21[112u32] r21[113u32] r21[114u32] r21[115u32] r21[116u32] r21[117u32] r21[118u32] r21[119u32] r21[120u32] r21[121u32] r21[122u32] r21[123u32] r21[124u32] r21[125u32] r21[126u32] r21[127u32] r21[128u32] r21[129u32] r21[130u32] r21[131u32] r21[132u32] r21[133u32] r21[134u32] r21[135u32] r21[136u32] r21[137u32] r21[138u32] r21[139u32] r21[140u32] r21[141u32] r21[142u32] r21[143u32] r21[144u32] r21[145u32] r21[146u32] r21[147u32] r21[148u32] r21[149u32] r21[150u32] r21[151u32] r21[152u32] r21[153u32] r21[154u32] r21[155u32] r21[156u32] r21[157u32] r21[158u32] r21[159u32] r21[160u32] r21[161u32] r21[162u32] r21[163u32] r21[164u32] r21[165u32] r21[166u32] r21[167u32] r21[168u32] r21[169u32] r21[170u32] r21[171u32] r21[172u32] r21[173u32] r21[174u32] r21[175u32] r21[176u32] r21[177u32] r21[178u32] r21[179u32] r21[180u32] r21[181u32] r21[182u32] r21[183u32] r21[184u32] r21[185u32] r21[186u32] r21[187u32] r21[188u32] into r22 as [u8; 189u32];
    hash.keccak256.native.raw r22 into r23 as [boolean; 256u32];
    deserialize.bits.raw r23 ([boolean; 256u32]) into r24 ([u128; 2u32]);    ternary r20 r24[0u32] r19[0u32] into r25;
    ternary r20 r24[1u32] r19[1u32] into r26;
    cast r25 r26 into r27 as [u128; 2u32];
    is.eq r1 125u32 into r28;
    cast 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 into r29 as [u8; 125u32];
    cast r0[0u32] r0[1u32] r0[2u32] r0[3u32] r0[4u32] r0[5u32] r0[6u32] r0[7u32] r0[8u32] r0[9u32] r0[10u32] r0[11u32] r0[12u32] r0[13u32] r0[14u32] r0[15u32] r0[16u32] r0[17u32] r0[18u32] r0[19u32] r0[20u32] r0[21u32] r0[22u32] r0[23u32] r0[24u32] r0[25u32] r0[26u32] r0[27u32] r0[28u32] r0[29u32] r0[30u32] r0[31u32] r0[32u32] r0[33u32] r0[34u32] r0[35u32] r0[36u32] r0[37u32] r0[38u32] r0[39u32] r0[40u32] r0[41u32] r0[42u32] r0[43u32] r0[44u32] r0[45u32] r0[46u32] r0[47u32] r0[48u32] r0[49u32] r0[50u32] r0[51u32] r0[52u32] r0[53u32] r0[54u32] r0[55u32] r0[56u32] r0[57u32] r0[58u32] r0[59u32] r0[60u32] r0[61u32] r0[62u32] r0[63u32] r0[64u32] r0[65u32] r0[66u32] r0[67u32] r0[68u32] r0[69u32] r0[70u32] r0[71u32] r0[72u32] r0[73u32] r0[74u32] r0[75u32] r0[76u32] r0[77u32] r0[78u32] r0[79u32] r0[80u32] r0[81u32] r0[82u32] r0[83u32] r0[84u32] r0[85u32] r0[86u32] r0[87u32] r0[88u32] r0[89u32] r0[90u32] r0[91u32] r0[92u32] r0[93u32] r0[94u32] r0[95u32] r0[96u32] r0[97u32] r0[98u32] r0[99u32] r0[100u32] r0[101u32] r0[102u32] r0[103u32] r0[104u32] r0[105u32] r0[106u32] r0[107u32] r0[108u32] r0[109u32] r0[110u32] r0[111u32] r0[112u32] r0[113u32] r0[114u32] r0[115u32] r0[116u32] r0[117u32] r0[118u32] r0[119u32] r0[120u32] r0[121u32] r0[122u32] r0[123u32] r0[124u32] r29[125u32] r29[126u32] r29[127u32] r29[128u32] r29[129u32] r29[130u32] r29[131u32] r29[132u32] r29[133u32] r29[134u32] r29[135u32] r29[136u32] r29[137u32] r29[138u32] r29[139u32] r29[140u32] r29[141u32] r29[142u32] r29[143u32] r29[144u32] r29[145u32] r29[146u32] r29[147u32] r29[148u32] r29[149u32] r29[150u32] r29[151u32] r29[152u32] r29[153u32] r29[154u32] r29[155u32] r29[156u32] r29[157u32] r29[158u32] r29[159u32] r29[160u32] r29[161u32] r29[162u32] r29[163u32] r29[164u32] r29[165u32] r29[166u32] r29[167u32] r29[168u32] r29[169u32] r29[170u32] r29[171u32] r29[172u32] r29[173u32] r29[174u32] r29[175u32] r29[176u32] r29[177u32] r29[178u32] r29[179u32] r29[180u32] r29[181u32] r29[182u32] r29[183u32] r29[184u32] r29[185u32] r29[186u32] r29[187u32] r29[188u32] into r30 as [u8; 189u32];
    hash.keccak256.native.raw r30 into r31 as [boolean; 256u32];
    deserialize.bits.raw r31 ([boolean; 256u32]) into r32 ([u128; 2u32]);    ternary r28 r32[0u32] r27[0u32] into r33;
    ternary r28 r32[1u32] r27[1u32] into r34;
    cast r33 r34 into r35 as [u128; 2u32];
    is.eq r1 141u32 into r36;
    cast 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 into r37 as [u8; 141u32];
    cast r0[0u32] r0[1u32] r0[2u32] r0[3u32] r0[4u32] r0[5u32] r0[6u32] r0[7u32] r0[8u32] r0[9u32] r0[10u32] r0[11u32] r0[12u32] r0[13u32] r0[14u32] r0[15u32] r0[16u32] r0[17u32] r0[18u32] r0[19u32] r0[20u32] r0[21u32] r0[22u32] r0[23u32] r0[24u32] r0[25u32] r0[26u32] r0[27u32] r0[28u32] r0[29u32] r0[30u32] r0[31u32] r0[32u32] r0[33u32] r0[34u32] r0[35u32] r0[36u32] r0[37u32] r0[38u32] r0[39u32] r0[40u32] r0[41u32] r0[42u32] r0[43u32] r0[44u32] r0[45u32] r0[46u32] r0[47u32] r0[48u32] r0[49u32] r0[50u32] r0[51u32] r0[52u32] r0[53u32] r0[54u32] r0[55u32] r0[56u32] r0[57u32] r0[58u32] r0[59u32] r0[60u32] r0[61u32] r0[62u32] r0[63u32] r0[64u32] r0[65u32] r0[66u32] r0[67u32] r0[68u32] r0[69u32] r0[70u32] r0[71u32] r0[72u32] r0[73u32] r0[74u32] r0[75u32] r0[76u32] r0[77u32] r0[78u32] r0[79u32] r0[80u32] r0[81u32] r0[82u32] r0[83u32] r0[84u32] r0[85u32] r0[86u32] r0[87u32] r0[88u32] r0[89u32] r0[90u32] r0[91u32] r0[92u32] r0[93u32] r0[94u32] r0[95u32] r0[96u32] r0[97u32] r0[98u32] r0[99u32] r0[100u32] r0[101u32] r0[102u32] r0[103u32] r0[104u32] r0[105u32] r0[106u32] r0[107u32] r0[108u32] r0[109u32] r0[110u32] r0[111u32] r0[112u32] r0[113u32] r0[114u32] r0[115u32] r0[116u32] r0[117u32] r0[118u32] r0[119u32] r0[120u32] r0[121u32] r0[122u32] r0[123u32] r0[124u32] r0[125u32] r0[126u32] r0[127u32] r0[128u32] r0[129u32] r0[130u32] r0[131u32] r0[132u32] r0[133u32] r0[134u32] r0[135u32] r0[136u32] r0[137u32] r0[138u32] r0[139u32] r0[140u32] r37[141u32] r37[142u32] r37[143u32] r37[144u32] r37[145u32] r37[146u32] r37[147u32] r37[148u32] r37[149u32] r37[150u32] r37[151u32] r37[152u32] r37[153u32] r37[154u32] r37[155u32] r37[156u32] r37[157u32] r37[158u32] r37[159u32] r37[160u32] r37[161u32] r37[162u32] r37[163u32] r37[164u32] r37[165u32] r37[166u32] r37[167u32] r37[168u32] r37[169u32] r37[170u32] r37[171u32] r37[172u32] r37[173u32] r37[174u32] r37[175u32] r37[176u32] r37[177u32] r37[178u32] r37[179u32] r37[180u32] r37[181u32] r37[182u32] r37[183u32] r37[184u32] r37[185u32] r37[186u32] r37[187u32] r37[188u32] into r38 as [u8; 189u32];
    hash.keccak256.native.raw r38 into r39 as [boolean; 256u32];
    deserialize.bits.raw r39 ([boolean; 256u32]) into r40 ([u128; 2u32]);    ternary r36 r40[0u32] r35[0u32] into r41;
    ternary r36 r40[1u32] r35[1u32] into r42;
    cast r41 r42 into r43 as [u128; 2u32];
    is.eq r1 157u32 into r44;
    cast 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 into r45 as [u8; 157u32];
    cast r0[0u32] r0[1u32] r0[2u32] r0[3u32] r0[4u32] r0[5u32] r0[6u32] r0[7u32] r0[8u32] r0[9u32] r0[10u32] r0[11u32] r0[12u32] r0[13u32] r0[14u32] r0[15u32] r0[16u32] r0[17u32] r0[18u32] r0[19u32] r0[20u32] r0[21u32] r0[22u32] r0[23u32] r0[24u32] r0[25u32] r0[26u32] r0[27u32] r0[28u32] r0[29u32] r0[30u32] r0[31u32] r0[32u32] r0[33u32] r0[34u32] r0[35u32] r0[36u32] r0[37u32] r0[38u32] r0[39u32] r0[40u32] r0[41u32] r0[42u32] r0[43u32] r0[44u32] r0[45u32] r0[46u32] r0[47u32] r0[48u32] r0[49u32] r0[50u32] r0[51u32] r0[52u32] r0[53u32] r0[54u32] r0[55u32] r0[56u32] r0[57u32] r0[58u32] r0[59u32] r0[60u32] r0[61u32] r0[62u32] r0[63u32] r0[64u32] r0[65u32] r0[66u32] r0[67u32] r0[68u32] r0[69u32] r0[70u32] r0[71u32] r0[72u32] r0[73u32] r0[74u32] r0[75u32] r0[76u32] r0[77u32] r0[78u32] r0[79u32] r0[80u32] r0[81u32] r0[82u32] r0[83u32] r0[84u32] r0[85u32] r0[86u32] r0[87u32] r0[88u32] r0[89u32] r0[90u32] r0[91u32] r0[92u32] r0[93u32] r0[94u32] r0[95u32] r0[96u32] r0[97u32] r0[98u32] r0[99u32] r0[100u32] r0[101u32] r0[102u32] r0[103u32] r0[104u32] r0[105u32] r0[106u32] r0[107u32] r0[108u32] r0[109u32] r0[110u32] r0[111u32] r0[112u32] r0[113u32] r0[114u32] r0[115u32] r0[116u32] r0[117u32] r0[118u32] r0[119u32] r0[120u32] r0[121u32] r0[122u32] r0[123u32] r0[124u32] r0[125u32] r0[126u32] r0[127u32] r0[128u32] r0[129u32] r0[130u32] r0[131u32] r0[132u32] r0[133u32] r0[134u32] r0[135u32] r0[136u32] r0[137u32] r0[138u32] r0[139u32] r0[140u32] r0[141u32] r0[142u32] r0[143u32] r0[144u32] r0[145u32] r0[146u32] r0[147u32] r0[148u32] r0[149u32] r0[150u32] r0[151u32] r0[152u32] r0[153u32] r0[154u32] r0[155u32] r0[156u32] r45[157u32] r45[158u32] r45[159u32] r45[160u32] r45[161u32] r45[162u32] r45[163u32] r45[164u32] r45[165u32] r45[166u32] r45[167u32] r45[168u32] r45[169u32] r45[170u32] r45[171u32] r45[172u32] r45[173u32] r45[174u32] r45[175u32] r45[176u32] r45[177u32] r45[178u32] r45[179u32] r45[180u32] r45[181u32] r45[182u32] r45[183u32] r45[184u32] r45[185u32] r45[186u32] r45[187u32] r45[188u32] into r46 as [u8; 189u32];
    hash.keccak256.native.raw r46 into r47 as [boolean; 256u32];
    deserialize.bits.raw r47 ([boolean; 256u32]) into r48 ([u128; 2u32]);    ternary r44 r48[0u32] r43[0u32] into r49;
    ternary r44 r48[1u32] r43[1u32] into r50;
    cast r49 r50 into r51 as [u128; 2u32];
    is.eq r1 173u32 into r52;
    cast 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 0u8 into r53 as [u8; 173u32];
    cast r0[0u32] r0[1u32] r0[2u32] r0[3u32] r0[4u32] r0[5u32] r0[6u32] r0[7u32] r0[8u32] r0[9u32] r0[10u32] r0[11u32] r0[12u32] r0[13u32] r0[14u32] r0[15u32] r0[16u32] r0[17u32] r0[18u32] r0[19u32] r0[20u32] r0[21u32] r0[22u32] r0[23u32] r0[24u32] r0[25u32] r0[26u32] r0[27u32] r0[28u32] r0[29u32] r0[30u32] r0[31u32] r0[32u32] r0[33u32] r0[34u32] r0[35u32] r0[36u32] r0[37u32] r0[38u32] r0[39u32] r0[40u32] r0[41u32] r0[42u32] r0[43u32] r0[44u32] r0[45u32] r0[46u32] r0[47u32] r0[48u32] r0[49u32] r0[50u32] r0[51u32] r0[52u32] r0[53u32] r0[54u32] r0[55u32] r0[56u32] r0[57u32] r0[58u32] r0[59u32] r0[60u32] r0[61u32] r0[62u32] r0[63u32] r0[64u32] r0[65u32] r0[66u32] r0[67u32] r0[68u32] r0[69u32] r0[70u32] r0[71u32] r0[72u32] r0[73u32] r0[74u32] r0[75u32] r0[76u32] r0[77u32] r0[78u32] r0[79u32] r0[80u32] r0[81u32] r0[82u32] r0[83u32] r0[84u32] r0[85u32] r0[86u32] r0[87u32] r0[88u32] r0[89u32] r0[90u32] r0[91u32] r0[92u32] r0[93u32] r0[94u32] r0[95u32] r0[96u32] r0[97u32] r0[98u32] r0[99u32] r0[100u32] r0[101u32] r0[102u32] r0[103u32] r0[104u32] r0[105u32] r0[106u32] r0[107u32] r0[108u32] r0[109u32] r0[110u32] r0[111u32] r0[112u32] r0[113u32] r0[114u32] r0[115u32] r0[116u32] r0[117u32] r0[118u32] r0[119u32] r0[120u32] r0[121u32] r0[122u32] r0[123u32] r0[124u32] r0[125u32] r0[126u32] r0[127u32] r0[128u32] r0[129u32] r0[130u32] r0[131u32] r0[132u32] r0[133u32] r0[134u32] r0[135u32] r0[136u32] r0[137u32] r0[138u32] r0[139u32] r0[140u32] r0[141u32] r0[142u32] r0[143u32] r0[144u32] r0[145u32] r0[146u32] r0[147u32] r0[148u32] r0[149u32] r0[150u32] r0[151u32] r0[152u32] r0[153u32] r0[154u32] r0[155u32] r0[156u32] r0[157u32] r0[158u32] r0[159u32] r0[160u32] r0[161u32] r0[162u32] r0[163u32] r0[164u32] r0[165u32] r0[166u32] r0[167u32] r0[168u32] r0[169u32] r0[170u32] r0[171u32] r0[172u32] r53[173u32] r53[174u32] r53[175u32] r53[176u32] r53[177u32] r53[178u32] r53[179u32] r53[180u32] r53[181u32] r53[182u32] r53[183u32] r53[184u32] r53[185u32] r53[186u32] r53[187u32] r53[188u32] into r54 as [u8; 189u32];
    hash.keccak256.native.raw r54 into r55 as [boolean; 256u32];
    deserialize.bits.raw r55 ([boolean; 256u32]) into r56 ([u128; 2u32]);    ternary r52 r56[0u32] r51[0u32] into r57;
    ternary r52 r56[1u32] r51[1u32] into r58;
    cast r57 r58 into r59 as [u128; 2u32];
    is.eq r1 189u32 into r60;
    cast r0[0u32] r0[1u32] r0[2u32] r0[3u32] r0[4u32] r0[5u32] r0[6u32] r0[7u32] r0[8u32] r0[9u32] r0[10u32] r0[11u32] r0[12u32] r0[13u32] r0[14u32] r0[15u32] r0[16u32] r0[17u32] r0[18u32] r0[19u32] r0[20u32] r0[21u32] r0[22u32] r0[23u32] r0[24u32] r0[25u32] r0[26u32] r0[27u32] r0[28u32] r0[29u32] r0[30u32] r0[31u32] r0[32u32] r0[33u32] r0[34u32] r0[35u32] r0[36u32] r0[37u32] r0[38u32] r0[39u32] r0[40u32] r0[41u32] r0[42u32] r0[43u32] r0[44u32] r0[45u32] r0[46u32] r0[47u32] r0[48u32] r0[49u32] r0[50u32] r0[51u32] r0[52u32] r0[53u32] r0[54u32] r0[55u32] r0[56u32] r0[57u32] r0[58u32] r0[59u32] r0[60u32] r0[61u32] r0[62u32] r0[63u32] r0[64u32] r0[65u32] r0[66u32] r0[67u32] r0[68u32] r0[69u32] r0[70u32] r0[71u32] r0[72u32] r0[73u32] r0[74u32] r0[75u32] r0[76u32] r0[77u32] r0[78u32] r0[79u32] r0[80u32] r0[81u32] r0[82u32] r0[83u32] r0[84u32] r0[85u32] r0[86u32] r0[87u32] r0[88u32] r0[89u32] r0[90u32] r0[91u32] r0[92u32] r0[93u32] r0[94u32] r0[95u32] r0[96u32] r0[97u32] r0[98u32] r0[99u32] r0[100u32] r0[101u32] r0[102u32] r0[103u32] r0[104u32] r0[105u32] r0[106u32] r0[107u32] r0[108u32] r0[109u32] r0[110u32] r0[111u32] r0[112u32] r0[113u32] r0[114u32] r0[115u32] r0[116u32] r0[117u32] r0[118u32] r0[119u32] r0[120u32] r0[121u32] r0[122u32] r0[123u32] r0[124u32] r0[125u32] r0[126u32] r0[127u32] r0[128u32] r0[129u32] r0[130u32] r0[131u32] r0[132u32] r0[133u32] r0[134u32] r0[135u32] r0[136u32] r0[137u32] r0[138u32] r0[139u32] r0[140u32] r0[141u32] r0[142u32] r0[143u32] r0[144u32] r0[145u32] r0[146u32] r0[147u32] r0[148u32] r0[149u32] r0[150u32] r0[151u32] r0[152u32] r0[153u32] r0[154u32] r0[155u32] r0[156u32] r0[157u32] r0[158u32] r0[159u32] r0[160u32] r0[161u32] r0[162u32] r0[163u32] r0[164u32] r0[165u32] r0[166u32] r0[167u32] r0[168u32] r0[169u32] r0[170u32] r0[171u32] r0[172u32] r0[173u32] r0[174u32] r0[175u32] r0[176u32] r0[177u32] r0[178u32] r0[179u32] r0[180u32] r0[181u32] r0[182u32] r0[183u32] r0[184u32] r0[185u32] r0[186u32] r0[187u32] r0[188u32] into r61 as [u8; 189u32];
    hash.keccak256.native.raw r61 into r62 as [boolean; 256u32];
    deserialize.bits.raw r62 ([boolean; 256u32]) into r63 ([u128; 2u32]);    ternary r60 r63[0u32] r59[0u32] into r64;
    ternary r60 r63[1u32] r59[1u32] into r65;
    cast r64 r65 into r66 as [u128; 2u32];
    output r66 as [u128; 2u32].private;

constructor:
    assert.eq edition 0u16;
